{"version":3,"sources":["webpack:///../variants/styling.mdx"],"names":["author","name","username","image","tweet","time","Date","source","permalink","fitInsideContainer","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","TweetCard","Container","Playground","showPlaygroundEdit","theme","colors","primary","secondary","accent","background","gradientBackground","blurredBackground","style","transform","isMDXComponent"],"mappings":"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","file":"component---variants-styling-mdx-189ce21535433fe06329.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zora.peteri/Documents/projects/react-tweet-card/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport TweetCard from '../TweetCard';\nimport Container from '../components/Container';\nimport { Playground } from 'docz';\nexport const author = {\n  name: 'dan mentos',\n  username: 'DanMentos',\n  image: 'https://pbs.twimg.com/profile_images/548378022768701441/2zz0Vk61_400x400.png'\n};\nexport const tweet = `[introducing girlfriend to my family]\nme: this is my girlfriend janine\njanine: hi\nwife: what the fuck`;\nexport const time = new Date(2016, 7, 11, 6, 14);\nexport const source = \"TweetDeck\";\nexport const permalink = \"https://twitter.com/DanMentos/status/763589479055495168\";\nexport const fitInsideContainer = true;\nexport const _frontmatter = {};\nconst layoutProps = {\n  author,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h1>\n    <h2 {...{\n      \"id\": \"themes\"\n    }}>{`Themes`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` prop can be set to `}<inlineCode parentName=\"p\">{`light`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`dim`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{`. Try it out!`}</p>\n    <Playground __position={0} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    theme=\\\"dim\\\"\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} theme=\"dim\" mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h2>\n    <p>{`The colors of the pre-defined themes can be extended.`}</p>\n    <table>\n    <thead>\n        <tr>\n            <th>Color setting</th>\n            <th>Used</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>primary</td>\n            <td>Author name, tweet text</td>\n        </tr>\n        <tr>\n            <td>secondary</td>\n            <td>Author username, time</td>\n        </tr>\n        <tr>\n            <td>accent</td>\n            <td>Source, mentions, links</td>\n        </tr>\n        <tr>\n            <td>background</td>\n            <td>Background color of the container</td>\n        </tr>\n    </tbody>\n    </table>\n    <Playground __position={2} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    colors={{\\n      primary: \\'#ffffff\\',\\n      secondary: \\'#add8e6\\',\\n      accent: \\'#ffffd8\\',\\n      background: \\'#e5e4ff\\',\\n    }}\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} colors={{\n          primary: '#ffffff',\n          secondary: '#add8e6',\n          accent: '#ffffd8',\n          background: '#e5e4ff'\n        }} mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"gradient-background\"\n    }}>{`Gradient background`}</h2>\n    <p>{`Passing in the `}<inlineCode parentName=\"p\">{`gradientBackground`}</inlineCode>{` prop to the component will create a gradient background to the container based on the background color of the active theme.`}</p>\n    <Playground __position={3} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    theme=\\\"light\\\" // try \\\"dim\\\" and \\\"dark\\\" !\\n    gradientBackground\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} theme=\"light\" // try \"dim\" and \"dark\" !\n        gradientBackground mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"blurred-background\"\n    }}>{`Blurred background`}</h2>\n    <p>{`Passing in the `}<inlineCode parentName=\"p\">{`blurredBackground`}</inlineCode>{` prop to the component will create a blurred effect on the background of the container.`}</p>\n    <Playground __position={4} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    theme=\\\"light\\\" // try \\\"dim\\\" and \\\"dark\\\" !\\n    blurredBackground\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} theme=\"light\" // try \"dim\" and \"dark\" !\n        blurredBackground mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"accessing-the-dom-node\"\n    }}>{`Accessing the DOM node`}</h2>\n    <p>{`Any prop that's a valid HTML5 attribute can be passed in to the component, and it's main div will get those attributes, including `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{`. This way the component can easily be used with libraries like styled components.`}</p>\n    <Playground __position={5} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    style={{\\n      transform: \\'rotate(5deg)\\',\\n    }}\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} style={{\n          transform: 'rotate(5deg)'\n        }} mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"classnames\"\n    }}>{`Classnames`}</h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}