{"version":3,"sources":["webpack:///../styling.mdx"],"names":["author","name","username","image","tweet","time","Date","source","permalink","fitInsideContainer","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","TweetCard","Container","Playground","Code","showPlaygroundEdit","theme","colors","primary","secondary","accent","background","gradientBackground","blurredBackground","style","transform","fontSize","className","isMDXComponent"],"mappings":"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","file":"component---styling-mdx-6e8c6c7389ce279a3491.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zora.peteri/Documents/projects/react-tweet-card/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport TweetCard from './TweetCard';\nimport Container from './components/Container';\nimport { Playground } from 'docz';\nimport { Code } from 'gatsby-theme-docz/src/components/Code';\nexport const author = {\n  name: 'olive üçìüêá',\n  username: 'milkandmorphine',\n  image: 'https://pbs.twimg.com/profile_images/1407804739094515713/_9SvjNSI_400x400.jpg'\n};\nexport const tweet = `hate restaurants that make u say shit like yeah can i have the big wet daddy burger please thanks`;\nexport const time = new Date(2021, 5, 23, 13, 51);\nexport const source = \"Twitter for iPhone\";\nexport const permalink = \"https://twitter.com/milkandmorphine/status/1407667588189065217\";\nexport const fitInsideContainer = true;\nexport const _frontmatter = {};\nconst layoutProps = {\n  author,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h1>\n    <h2 {...{\n      \"id\": \"themes\"\n    }}>{`Themes`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` prop can be set to `}<inlineCode parentName=\"p\">{`light`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`dim`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{`. Try it out!`}</p>\n    <Playground __position={0} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    theme=\\\"dim\\\" // try \\\"light\\\" and \\\"dark\\\"\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      Code,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} theme=\"dim\" // try \"light\" and \"dark\"\n        mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h2>\n    <p>{`The colors of the pre-defined themes can be extended.`}</p>\n    <table>\n    <thead>\n        <tr>\n            <th>Color setting</th>\n            <th>Used</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>primary</td>\n            <td>Author name, tweet text</td>\n        </tr>\n        <tr>\n            <td>secondary</td>\n            <td>Author username, time</td>\n        </tr>\n        <tr>\n            <td>accent</td>\n            <td>Source, mentions, links</td>\n        </tr>\n        <tr>\n            <td>background</td>\n            <td>Background color of the container</td>\n        </tr>\n    </tbody>\n    </table>\n    <Playground __position={2} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    colors={{\\n      primary: \\'#ffffff\\',\\n      secondary: \\'#add8e6\\',\\n      accent: \\'#ffffd8\\',\\n      background: \\'#e5e4ff\\',\\n    }}\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      Code,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} colors={{\n          primary: '#ffffff',\n          secondary: '#add8e6',\n          accent: '#ffffd8',\n          background: '#e5e4ff'\n        }} mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"gradient-background\"\n    }}>{`Gradient background`}</h2>\n    <p>{`Passing in the `}<inlineCode parentName=\"p\">{`gradientBackground`}</inlineCode>{` prop to the component will create a gradient background to the container based on the background color of the active theme.`}</p>\n    <Playground __position={3} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    theme=\\\"light\\\" // try \\\"dim\\\" and \\\"dark\\\"\\n    gradientBackground\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      Code,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} theme=\"light\" // try \"dim\" and \"dark\"\n        gradientBackground mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"blurred-background\"\n    }}>{`Blurred background`}</h2>\n    <p>{`Passing in the `}<inlineCode parentName=\"p\">{`blurredBackground`}</inlineCode>{` prop to the component will create a blurred effect on the background of the container.`}</p>\n    <Playground __position={4} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    theme=\\\"light\\\" // try \\\"dim\\\" and \\\"dark\\\"\\n    blurredBackground\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      Code,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} theme=\"light\" // try \"dim\" and \"dark\"\n        blurredBackground mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"accessing-the-dom-node\"\n    }}>{`Accessing the DOM node`}</h2>\n    <p>{`Any prop that's a valid HTML5 attribute can be passed in to the component, and its main div will get those attributes, including `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{`. This way the component can easily be used with libraries like styled components.`}</p>\n    <Playground __position={5} __code={'<Container>\\n  <TweetCard\\n    {...{ author, tweet, time, source, permalink, fitInsideContainer }}\\n    style={{\\n      transform: \\'rotate(5deg)\\',\\n    }}\\n  />\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      Container,\n      Playground,\n      Code,\n      DefaultLayout,\n      author,\n      tweet,\n      time,\n      source,\n      permalink,\n      fitInsideContainer,\n      _frontmatter\n    }} showPlaygroundEdit={false} mdxType=\"Playground\">\n    <Container mdxType=\"Container\">\n        <TweetCard {...{\n          author,\n          tweet,\n          time,\n          source,\n          permalink,\n          fitInsideContainer\n        }} style={{\n          transform: 'rotate(5deg)'\n        }} mdxType=\"TweetCard\" />\n    </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"classnames\"\n    }}>{`Classnames`}</h2>\n    <p>{`The component intentionally exposes classnames on its elements for you to control from your own stylesheet. All classnames start with the `}<inlineCode parentName=\"p\">{`react-tweet-card`}</inlineCode>{` prefix.`}</p>\n    <details style={{\n      fontSize: '14px'\n    }}>\n    <summary style={{\n        \"cursor\": \"pointer\",\n        \"padding\": \"10px\",\n        \"border\": \"1px solid currentColor\",\n        \"borderRadius\": \"4px\",\n        \"width\": \"fit-content\",\n        \"margin\": \"10px 0\"\n      }}>\n        Exposed classnames\n    </summary>\n    <ul style={{\n        \"marginLeft\": \"50px\"\n      }}>\n        <li>react-tweet-card__container</li>\n         <li>react-tweet-card__author-name</li>\n        <li>react-tweet-card__author-username</li>\n        <li>react-tweet-card__author-image</li>\n        <li>react-tweet-card__verified-badge</li>\n        <li>react-tweet-card__protected-icon</li>\n        <li>react-tweet-card__time</li>\n        <li>react-tweet-card__source</li>\n        <li>react-tweet-card__tweet</li>\n        <li>react-tweet-card__twitter-logo</li>\n    </ul>\n    </details>\n    <Code className=\"css\" mdxType=\"Code\">\n    {`/* example */\n    \n.react-tweet-card__username {\n    display: none;\n}`}\n    </Code>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}